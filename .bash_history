pwd
ln
ln -1
pwd
touch hi.txt
ln
echo wkdguddnjs@gmail.com > hi.txt
cat hi.txt
mkdir hello
cd hello
pwd
mkdir bye
touch bye.txt
ls
rm bye.txt
ls
rm bye
ls
rm -rf bye
ls
mkdir justmkdir
sudo mkdir sudomkdir
ls
ls -1
nano hello.java
MANO
NANO
MAMO
nano
apt
sudo apt install wget
neofetch
apt install neofetch
sudo apt install neofetch
apt install neofetch
sudo install neofetch
sudo apt install neofetch
sudo apt update
sudo apt install neofetch
neofetch
mkdir linux
nano hello.java
ls -1
hello=codstates
hello=codestates
export unclass="is good"
export bad_exmple=this is bad example
echo $hello'



echo $hello
echo unclass
echo $unclass
echo $bad_example
?
echo $bad_exmple
cd~
cd ~
cd~
ls -al
nano zshrc
cd ~
cd~
ls -al
nano .bashrc
echo wkdguddnjs
nano .bashrc
echo $wkdguddnjs
nano .bashrc
echo %wkdguddnjs
echo $wkdguddnjs
nano .bashrc
echo $wkdguddnjs
nano /bashrc
nano .bashrc
source.bashrc
source .bashrc
echo $wkdguddnjs
/etc/profile
$wkdguddnjs
set
ln
ls
pwd
ls
rm text1.txt
touch text1.txt
ls
rm text1.txt
rm -r subdirectory
rm -r helloworld
rm -r wkdguddnjs
rm -r hello
cat hello
cat helloworld
cat hello
$ head hello
head hello
head hello > helloworld 
head
tail hello
cd hello
mv hello byebye
ls -al
mkdir hello
ls
pwd
ls -al
touch hello.txt
ls
ls -al
echo hello.txt > dkdkdkdkdkd
ls
head hello.txt 
cat hello.txt
cat dkdkdkdkdkdk > hello.txt
echo dkdkdkdkdk > hello.txt
cat hello.txt
pwd
head
nano hello.text
nano hello.txt
head [-n 1 hello.txt
head -n 1 hello.txt
head -c 1 hello.txt
\
head -c 8 hello.txt
ddd
dd
head -c 10 hello.txt
echo 아아아아 > hello.txt
cat hello.txt
tail hello.txt
tail +20 hello.txt
nano hello.txt
tail -c 20 hello.txt
tail +20 hello.txt
tail -n 1 hello.txt
nano hello.txt
tail -n 1 hello.txt
tail +2 hello.txt
head -n 1 hello.txt
head +3 hello.txt
more hello.txt
more -n hello.txt
more -n hello.txt    
more -n hello.txt
more hello.txt    
more hello.txt                                      
more -n hellow.txt
more hello.txt
more +n hello.txt
less hello.txt
d
ls
less hello.txt
ls -al
ls
nano .zshrc
ls -1
ls -a
ls -al
nano .bashrc
echo wkdguddnjs
echo wkdguddnjs .bashrc
echo=wkdguddnjs
echo wkdguddnjs
echo wkdguddnjs hello
echo wkdguddnjs
export wkdguddnjs1 = "codstates"
export wkdguddnjs1="codstates"
wkdguddnjs
echo wkdguddnjs
source wkdguddnjs
source .bashrc
echo wkdguddnjs
hello
hello=codstates
hello
hello=codstates
echo hello
echo $wkdguddnjs
echo $hello
PWD
pwd
ls
ls -1
ls -a
ls -al
ls -la
ssh-keygen
cat ~/.ssh/id_rsa.pub
git git@github.com:codestates-seb/be-simple-git-workflow.git
git clone git@github.com:codestates-seb/be-simple-git-workflow.git
ls
git clone git@github.com:codestates-seb/be-simple-git-workflow.git
ls
brew install gh
gh --version
gh auth login
? What accout do you want to log into? GitHub.com
? What is your preferred protocol for Git Operations? HTTPS
? Authenticate Git with your GitHub credentials? Yes
? How would you like to authenticate GitHub CLI? Login with a web browser
gh auth login
gh --version
fork
nkdir git_practice
mkdir git_practice
touch hello_git
cd hello_git
ls
rm hello_git
touch hello_git.txt git_practice/
ls
pwd
cd git_practice
mv hello_git.txt git_practice/
ls
cd
mv hello_git.txt git_practice/
ls
pwd
cd git_practice
cat hello_git.txt
nano hello_git.txt
cat hello_git.txt
git init
git config --global init.defaultBranch branchweon
git branch -m branchweon
git config --global init.defaultBranch main
git branch -m main
git init
ls -al
ls -a
git init
git status
git add .
git status
git rm --cached hello.git.txt
git rm --cached hello_git.txt
git status
git add 
git add .
git status
git commit -m "First commit"
git config user.name "장형원"
git config user.email "wkdguddnjs@gmail.com"
git commit -m "First commit"
This message is the output generated by Git after you have made your first commit. It indicates that a new commit has been created and provides some basic information about it.
In this case, it appears that you created a new file called hello_git.txt and added one line to it, which resulted in one insertion. The message also includes the commit ID (in this case, 852e5f5), which is a unique identifier for the commit that you can use to reference it in the future.
This message is a confirmation that your changes have been successfully committed to your local repository. However, if you want to share your changes with others or back them up, you will need to push your changes to a remote repository, such as one hosted on GitHub or GitLab'
git commit -m "First commit"
git status
git add .
git status
git rm --cached hello_git.txt
git status
git add .
git status
git add hello.py
ls -a
git commit -m "First commit"
git log
git status
cat hello.git.txt
cat hello_git.txt
nano hello_git.txt
git status
git add .
git status
git commit -m "second commit"
git status
git log
git remote --v
git remote add https://github.com/janghyungweon/git_practice.git
git remote add origin https://github.com/janghyungweon/git_practice.git
git remote --v
git push origin main
